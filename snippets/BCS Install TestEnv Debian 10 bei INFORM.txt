### Proxy für die Pakete in apt.conf setzen
http://cacher.intern.inform-software.com:3142

### SSH Zugang
mkdir .ssh
nano .ssh/authorized_keys
### Folgende Zeile ergänzen
ssh-rsa AAAAB3NzaC1yc2EAAAABJQAAAQEAsfDW7HTO2aNYj74C5ZyQyWoeyTw6J9h9ElQG7k/pW/JjT428Ghdfr7thYBjIjvvUu/U5dFbAYaUxBf+Xt+P8jLcSwv1DxfbnP4qJaKg5Gu3an88XZna8x2dn8FYYQ7/BJL/iUGpeL3h0jyunBIwOPoIncUK+xbEB3rP5jmS09GzBpreH7ELqrZlT6pYiqREAs9l3nFF38mLWqLUHdT74NIAK4UGtFHfAiL6w42CnEYfxp4vkJe0yExvI/bCdJsq3wF+gGtHXrHwVmPe0bJ/heN/mzWEwKYXC5K77lheUlDq/k/Iz453zPR/EJkwO5LNRdTdd5MhgpWMa/LPUJeXk8w== rsa-key-20130422
chmod 0700 .ssh && chmod 0600 .ssh/*

### Systemwerkzeuge installieren
apt-get -y install mc unp curl unzip git apt-transport-https psmisc lsof bash-completion rsync locate

### git konfigurieren
nano /root/.gitconfig

# ---------------------------------
[credential]
        helper = cache --timeout=300
[pull]
        rebase = true
[color "branch"]
        current = yellow reverse
        local = yellow
        remote = green
[color "diff"]
        meta = yellow bold
        frag = magenta bold
        old = red bold
        new = green bold
[color "status"]
        added = yellow
        changed = green
        untracked = cyan
[merge]
        tool = vimdiff
        conflictstyle = diff3
[mergetool]
        prompt = false
[rerere]
        enabled = true
# ---------------------------------

### .bashrc konfigurieren, insbesondere den Proxy
...


### Java 11 und Postgres installieren
apt-get install -y openjdk-11-jdk-headless
apt-get install -y postgresql-11

### Für Java 11 unter Debian noch fontconfig installieren
apt-get install -y fontconfig

### Postgres-Konfiguration anpassen
# nano /etc/postgresql/11/main/pg_hba.conf
# Folgende Zeile hinzufügen
host bcs all 127.0.0.1/32 md5

# nano /etc/postgresql/11/main/postgresql.conf
shared_buffers 		ca. 1/4 des physikalischen Arbeitspeichers (bzw. des Speichers, der für die Datenbank vorgesehen ist)
effective_cache_size 	ca. 1/2 des physikalischen Arbeitspeichers (bzw. des Speichers, der für die Datenbank vorgesehen ist)
work_mem 		Speicher, der für bestimmte Sortier-, Join-, und Gruppierungsfunktionen verwendet werden kann; diese Speicher wird pro Verbindung allokiert

#Beispiel für exklusiven Datenbank-Server mit 6GB RAM:
# ---------------------------------
shared_buffers = 1536MB
effective_cache_size = 3072MB
work_mem = 10MB
# ---------------------------------

### User und Datenbank anlegen
su - postgres

createuser -P --interactive --no-createdb --no-createrole --no-superuser bcs
createdb -E UTF8 -O bcs bcs

### Build-Umgebung installieren, um die libapr für Tomcat bauen zu können
apt-get install -y build-essential libapr1-dev libssl-dev

### Basis-Verzeichnis anlegen
mkdir -p /opt/projektron/bcs
cd /opt/projektron/bcs
mkdir -p backup restore import export

### git-Repo clonen und umbenennen
git clone https://git.inform-software.com/gb30-bcs/gs3-bcs.git
mv gs3-bcs server

### ssh-Verbindung für ssh und rsync herstellen
# Now setup ssh so that it doesn’t ask for password when you perform ssh. 
# Use ssh-keygen on local server to generate public and private keys.
ssh-keygen

# Note: When it asks you to enter the passphrase just press enter key, and do not give any password here.

# Use ssh-copy-id, to copy the public key to the remote host.
ssh-copy-id -i ~/.ssh/id_rsa.pub root@bcs-test

# It is required that your private key files are NOT accessible by others.
chmod 0700 .ssh && chmod 0600 .ssh/*

# Note: The above will ask the password for your account on the remote host, 
# and copy the public key automatically to the appropriate location. If ssh-copy-id 
# doesn’t work for you, use the method we discussed earlier to setup ssh password less login.

# Now, you should be able to ssh to remote host without entering the password.
ssh root@bcs-test

### rsync des update-Verzeichnis von BCS-Test durchführen
#!/bin/bash
# Name  : rsync-from-bcstest.sh
# Autor : Carsten Söhrens
rsync -avP --delete --exclude 'rsync*' --exclude '*.beta.zip' root@172.16.1.102:/opt/projektron/bcs/updates/ /opt/projektron/bcs/updates
rsync -avP --delete root@172.16.1.102:/opt/projektron/bcs/restore/ /opt/projektron/bcs/restore

### Tomcat installieren
cd /opt/projektron/bcs/updates
./tomcat-build.sh
./tomcat-install.sh

... logs Verzeichnis nicht löschen bzw. neu erzeugen ...

### Links zu den relevanten conf-Verzeichnissen herstellen
cd tomcat
ln -s conf85_live_test conf

cd ..
ln -s conf_local_dev conf_local


### BCS-Version auspacken
unp ../updates/projektron-bcs-19.2.18.zip

### pgpass für Login ohne Passwort einrichten
.pgpass
chmod 0600 /root/.pgpass

### Docker installieren für Mailhog
https://www.digitalocean.com/community/tutorials/how-to-install-and-use-docker-on-debian-10

# Mailhog starten
docker run --restart unless-stopped --name mailhog -p 1025:1025 -p 1080:8025 -d mailhog/mailhog


